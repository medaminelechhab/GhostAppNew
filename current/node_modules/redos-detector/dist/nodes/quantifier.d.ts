import { CharacterReader, Stack } from '../character-reader/character-reader-level-0';
import { MyFeatures } from '../parse';
import { Quantifier } from 'regjsparser';
export type QuantifierIterations = ReadonlyMap<Quantifier<MyFeatures>, number>;
export type StackQuantifierEntry = Readonly<{
    inInfinitePortion: boolean;
    iteration: number;
    quantifier: Quantifier<MyFeatures>;
    type: 'quantifier';
}>;
export type QuantifierStack = readonly StackQuantifierEntry[];
export type QuantifiersInInfinitePortion = ReadonlySet<Quantifier<MyFeatures>>;
export declare function getQuantifierStack(stack: Stack): QuantifierStack;
export declare function buildQuantifiersInInfinitePortion(stack: QuantifierStack): QuantifiersInInfinitePortion;
export declare function buildQuantifierIterations(stack: QuantifierStack): QuantifierIterations;
export declare function buildQuantifierTrail(stack: QuantifierStack, asteriskInfinite: boolean): string;
export declare function buildQuantifierCharacterReader({ caseInsensitive, dotAll, node, }: {
    caseInsensitive: boolean;
    dotAll: boolean;
    node: Quantifier<MyFeatures>;
}): CharacterReader;
